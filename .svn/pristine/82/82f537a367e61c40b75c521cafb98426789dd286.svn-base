package com.ut.scf.service.test.project;

import java.util.HashMap;
import java.util.Map;

import javax.annotation.Resource;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;
import org.springframework.test.context.web.WebAppConfiguration;

import com.ut.scf.core.dict.PageInfoBean;
import com.ut.scf.respbean.BaseRespBean;
import com.ut.scf.service.project.ICountAnalyseService;
import com.ut.scf.service.project.impl.CountAnalyseServiceImpl;

@WebAppConfiguration
@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = { "classpath:spring-mybatis-test.xml" })
public class CountAnalyseServiceTest {
	@Resource ICountAnalyseService CountAnalyseService;
	private static final Logger log = LoggerFactory.getLogger(CountAnalyseServiceImpl.class);
	
	@Test
	public void getFinanceCountInfo(){
		log.info("=============================getFinanceCountInfo start=============================");
		try {

			BaseRespBean respBean = new BaseRespBean();
			Map<String, Object> Map = new HashMap<String,Object>();
			
			PageInfoBean page = new PageInfoBean();
			page.setPageNumber(1);
			page.setPageSize(5);
			respBean = CountAnalyseService.getFinanceCountInfo(Map,page);
			log.info("respBean:"+respBean.toString());
			
		} catch (Exception e) {
			e.printStackTrace();
		}

		log.info("=============================getFinanceCountInfo end=============================");
	}
	
	@Test
	public void getRevenueCountInfo(){
		log.info("=============================getRevenueCountInfo start=============================");
		try {

			BaseRespBean respBean = new BaseRespBean();
			Map<String, Object> Map = new HashMap<String,Object>();
			
			PageInfoBean page = new PageInfoBean();
			page.setPageNumber(1);
			page.setPageSize(5);
			respBean = CountAnalyseService.getRevenueCountInfo(Map,page);
			log.info("respBean:"+respBean.toString());
			
		} catch (Exception e) {
			e.printStackTrace();
		}

		log.info("=============================getRevenueCountInfo end=============================");
	}
	
	@Test
	public void getGuarantInfo(){
		log.info("=============================getGuarantInfo start=============================");
		try {

			BaseRespBean respBean = new BaseRespBean();
			Map<String, Object> Map = new HashMap<String,Object>();
			
			PageInfoBean page = new PageInfoBean();
			page.setPageNumber(1);
			page.setPageSize(5);
			respBean = CountAnalyseService.getGuarantInfo(Map,page);
			log.info("respBean:"+respBean.toString());
			
		} catch (Exception e) {
			e.printStackTrace();
		}

		log.info("=============================getGuarantInfo end=============================");
	}
	
	@Test
	public void getOverdueCountInfo(){
		log.info("=============================getOverdueCountInfo start=============================");
		try {

			BaseRespBean respBean = new BaseRespBean();
			Map<String, Object> Map = new HashMap<String,Object>();
			
			PageInfoBean page = new PageInfoBean();
			page.setPageNumber(1);
			page.setPageSize(5);
			respBean = CountAnalyseService.getOverdueCountInfo(Map,page);
			log.info("respBean:"+respBean.toString());
			
		} catch (Exception e) {
			e.printStackTrace();
		}

		log.info("=============================getOverdueCountInfo end=============================");
	}
}
