package com.ut.scf.web.controller.statistics;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpSession;

import org.activiti.engine.ProcessEngine;
import org.apache.commons.lang3.StringUtils;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.ut.scf.core.dict.PageInfoBean;
import com.ut.scf.core.dict.ScfConsts;
import com.ut.scf.core.util.BeanUtil;
import com.ut.scf.dao.auto.DykRepresentMapper;
import com.ut.scf.pojo.auto.DykRepresent;
import com.ut.scf.pojo.auto.DykRepresentExample;
import com.ut.scf.pojo.auto.DykRepresentExample.Criteria;
import com.ut.scf.reqbean.statistics.CarInfoListReqBean;
import com.ut.scf.respbean.BaseRespBean;
import com.ut.scf.service.statistics.ICarInfoStatisticsService;
import com.ut.scf.web.controller.BaseJsonController;
import com.ut.scf.web.controller.project.CarInfoController;

/**
 * @author liwd 车架明细
 */
@Controller
@RequestMapping("/carInfoStatistics")
public class CarInfoStatisticsController extends BaseJsonController {
	private static final Logger log = LoggerFactory
			.getLogger(CarInfoController.class);
	@Resource
	private ICarInfoStatisticsService carInfoStatisticsService;
	@Resource
	ProcessEngine processEngine;
	@Resource
	private DykRepresentMapper dykRepresentMapper;

	// 1.列出所有的企业信息
	@RequestMapping(value = "/list",method = RequestMethod.POST, consumes = { "application/json" }, produces = { "application/json;charset=UTF-8" })
	@ResponseBody
	public BaseRespBean getCustInfoList(HttpSession httpSession,@RequestBody CarInfoListReqBean reqBean)
			throws Exception {
		PageInfoBean page = new PageInfoBean();
		page.setPageNumber(reqBean.getPageNumber());
		page.setPageSize(reqBean.getPageSize());
		Map<String, Object> paramMap = BeanUtil.beanToMap(reqBean);
		String corpId = (String) httpSession.getAttribute(ScfConsts.SESSION_CORP_ID);
		
		String realName = (String) httpSession.getAttribute(ScfConsts.SESSION_REAL_NAME);
		List<DykRepresent> dykRepresentList=new ArrayList<DykRepresent>();
		if(StringUtils.isNotBlank(realName)){
			if(realName.contains("商代处")){
				DykRepresentExample example = new DykRepresentExample();
				Criteria criteria = example.createCriteria();
					criteria.andRepresentNameEqualTo(realName.substring(0, realName.indexOf("商代处")));
					dykRepresentList = dykRepresentMapper.selectByExample(example);
					paramMap.put("represent", dykRepresentList.get(0).getRepresentId());
			}else{
				if ("corp00001".equals(corpId)) {// 悦达

				} else if ("corp00002".equals(corpId)) {// dyk
					paramMap.put("sysType", 4);
					paramMap.put("corpId", corpId);
				} else if ("corp00003".equals(corpId)) {//
					paramMap.put("sysType", 6);
				} else {
					paramMap.put("corpId", corpId);
				}
			}
		}else{
			if ("corp00001".equals(corpId)) {// 悦达

			} else if ("corp00002".equals(corpId)) {// dyk
				paramMap.put("sysType", 4);
				paramMap.put("corpId", corpId);
			} else if ("corp00003".equals(corpId)) {//
				paramMap.put("sysType", 6);
			} else {
				paramMap.put("corpId", corpId);
			}
		}
	
		return carInfoStatisticsService.findCarInfos(paramMap, page);
	}
}
