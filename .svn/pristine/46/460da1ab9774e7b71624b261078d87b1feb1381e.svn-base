package com.ut.scf.web.controller.query;

import java.io.File;
import java.util.HashMap;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.mysql.jdbc.StringUtils;
import com.ut.scf.core.dict.PageInfoBean;
import com.ut.scf.core.util.BeanUtil;
import com.ut.scf.reqbean.query.OrderAssetsReqBean;
import com.ut.scf.respbean.BaseRespBean;
import com.ut.scf.service.query.IOrderAssetsService;
import com.ut.scf.web.controller.BaseJsonController;

@Controller
@RequestMapping("/orderAssets")
public class orderAssetsController extends BaseJsonController {

	private final Logger log = LoggerFactory.getLogger(this.getClass());


	@Resource
	private IOrderAssetsService orderAssetsService;

	@RequestMapping(value = "/exportOrderAssetsExcel")
	@ResponseBody
	public BaseRespBean exportOrderAssetsExcel(HttpSession httpSession, @RequestBody OrderAssetsReqBean reqBean,
			HttpServletRequest request) {
		BaseRespBean respBean =new BaseRespBean();
		if(StringUtils.isEmptyOrWhitespaceOnly(reqBean.getDateBegin())|| StringUtils.isEmptyOrWhitespaceOnly(reqBean.getDateEnd())){
			respBean.setResult(-1);
			respBean.setResultNote("日期不可以为空");

			return respBean;
		}
		try {
			String signPath = "/yzfzcexportExcel/fqcrYZF-"+reqBean.getPeopleType()+"-" + reqBean.getDateBegin()+"to"+reqBean.getDateEnd() + "orderlist.xlsx";
			String path = request.getSession().getServletContext().getRealPath(signPath);
			File tempFile = new File(path);
			File fileParent = tempFile.getParentFile();
			if (!fileParent.exists()) {
				fileParent.mkdirs();
			}
			Map<String, Object> paramMap = BeanUtil.beanToMap(reqBean);
			Map<String, Object>  map=new HashMap<String, Object>();
			if(reqBean.getPeopleType().equals("3")){
				 map=orderAssetsService.exportExcel(paramMap, path,request.getContextPath() + signPath);
			}else{
				
			}

			respBean.setResultMap(map);
			respBean.setResultNote(request.getContextPath() + signPath);		
			return respBean;
		} catch (Exception e) {
			respBean.setResult(-1);
			respBean.setResultNote(e.getMessage());
			e.printStackTrace();
			return respBean;
		}

	}
	@RequestMapping(value = "/getFqcrOrderComputeHistoryList")
	@ResponseBody
	public BaseRespBean list(@RequestBody OrderAssetsReqBean reqBean)
			throws Exception {
		Map<String, Object> paramMap = BeanUtil.beanToMap(reqBean);

		BaseRespBean respBean = new BaseRespBean();
		PageInfoBean page = new PageInfoBean();
		page.setPageNumber(reqBean.getPageNumber());
		page.setPageSize(reqBean.getPageSize());
		respBean = orderAssetsService.getFqcrOrderComputeHistoryList(paramMap, page);
		return respBean;
	}
	
}
