package com.ut.scf.web.controller.project;

import java.io.IOException;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;
import javax.validation.Valid;

import org.activiti.engine.impl.util.json.JSONObject;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.ut.scf.core.dict.ErrorCodeEnum;
import com.ut.scf.core.dict.ScfConsts;
import com.ut.scf.core.util.BeanUtil;
import com.ut.scf.reqbean.project.FinanceFlowReqBean;
import com.ut.scf.reqbean.project.PayCommitProcessReqBean;
import com.ut.scf.reqbean.project.PayCommitmentListReqBean;
import com.ut.scf.reqbean.pub.ActivitiDeleteProcessReqBean;
import com.ut.scf.reqbean.pub.TaskInfoReqBean;
import com.ut.scf.respbean.BaseRespBean;
import com.ut.scf.service.project.IActivitiService;
import com.ut.scf.service.project.IPayCommitmentService;
import com.ut.scf.web.controller.BaseJsonController;

@Controller
@RequestMapping("/commitment")
public class PayCommitmentManagerController extends BaseJsonController{
	@Resource
	private IPayCommitmentService iPayCommitmentService;
	
	@Resource
	private IActivitiService activitiService;

	@RequestMapping(value = "/list", method = RequestMethod.POST, consumes = { "application/json" }, produces = { "application/json;charset=UTF-8" })
	public @ResponseBody BaseRespBean getPayInfoList(
			@Valid @RequestBody PayCommitmentListReqBean reqBean) throws IOException {
		BaseRespBean respBean = iPayCommitmentService.getPayInfoList(reqBean);
		return respBean;
	}
	
	@RequestMapping(value = "/agencyList", method = RequestMethod.POST, consumes = { "application/json" }, produces = { "application/json;charset=UTF-8" })
	public @ResponseBody BaseRespBean agencyFinanceList(
			@Valid @RequestBody PayCommitmentListReqBean reqBean) throws IOException {
		BaseRespBean respBean = iPayCommitmentService.agencyFinanceList(reqBean);
		return respBean;
	}
	
	@RequestMapping(value = "/carFileInfo", method = RequestMethod.POST, consumes = { "application/json" }, produces = { "application/json;charset=UTF-8" })
	public @ResponseBody BaseRespBean getCarFileInfo(
			@Valid @RequestBody PayCommitmentListReqBean reqBean) throws IOException {
		BaseRespBean respBean = iPayCommitmentService.getCarFileInfo(reqBean);
		return respBean;
	}
	

	@RequestMapping(value = "/startProcess", method = RequestMethod.POST, consumes = { "application/json" }, produces = { "application/json;charset=UTF-8" })
	public @ResponseBody BaseRespBean startProcess(HttpSession httpSession,
			@RequestBody PayCommitProcessReqBean reqBean,BindingResult bindingResult){
		BaseRespBean respBean = new BaseRespBean();
		// 获取当前用户
		String userName = (String) httpSession.getAttribute(ScfConsts.SESSION_USERNAME);
		String roleId = (String) httpSession.getAttribute(ScfConsts.SESSION_ROLE_ID);
		reqBean.setUserId(userName);
		reqBean.setLaunchRoleId(roleId);
		//reqBean.setActivitiKey("payCommitment");
	/*	JSONObject repayInfoStr = new JSONObject(reqBean);
		respBean = iPayCommitmentService.startProcess(repayInfoStr, httpSession);*/
		iPayCommitmentService.updateFinance(reqBean, httpSession, "#0001");
		return respBean;
	}
	@RequestMapping(value = "/updateCarinfo", method = RequestMethod.POST, consumes = { "application/json" }, produces = { "application/json;charset=UTF-8" })
	public @ResponseBody BaseRespBean updateCarinfo(HttpSession httpSession,
			@RequestBody PayCommitProcessReqBean reqBean,BindingResult bindingResult){
		BaseRespBean respBean = new BaseRespBean();
		// 获取当前用户
		String userName = (String) httpSession.getAttribute(ScfConsts.SESSION_USERNAME);
		String roleId = (String) httpSession.getAttribute(ScfConsts.SESSION_ROLE_ID);
		reqBean.setUserId(userName);
		reqBean.setLaunchRoleId(roleId);
		//reqBean.setActivitiKey("payCommitment");
	/*	JSONObject repayInfoStr = new JSONObject(reqBean);
		respBean = iPayCommitmentService.startProcess(repayInfoStr, httpSession);*/
		iPayCommitmentService.updateCarInfo(reqBean, httpSession, "#0001");
		return respBean;
	}
	@RequestMapping(value = "/getDataByTaskId", method = RequestMethod.POST, consumes = { "application/json" }, produces = { "application/json;charset=UTF-8" })
	public @ResponseBody BaseRespBean getDataByTaskId(HttpSession httpSession,
			@RequestBody TaskInfoReqBean reqBean,
			BindingResult bindingResult) {
		BaseRespBean respBean = new BaseRespBean();
		respBean = iPayCommitmentService.getDataByTaskId(reqBean);
		return respBean;
	}
	
	@RequestMapping(value = "/fillGuarantee", method = RequestMethod.POST, consumes = { "application/json" }, produces = { "application/json;charset=UTF-8" })
	public @ResponseBody BaseRespBean fillGuarantee(HttpSession httpSession,
			@RequestBody PayCommitProcessReqBean reqBean,BindingResult bindingResult){
		BaseRespBean respBean = new BaseRespBean();
		// 获取当前用户
		String userName = (String) httpSession.getAttribute(ScfConsts.SESSION_USERNAME);
		reqBean.setUserId(userName);
		iPayCommitmentService.fillGuarantee(reqBean);
		return respBean;
	}
	
	//审核是否同意
	@RequestMapping(value = "/doAgree", method = RequestMethod.POST, consumes = { "application/json" }, produces = { "application/json;charset=UTF-8" })
	public @ResponseBody BaseRespBean doAgree(HttpSession httpSession,
			@RequestBody PayCommitProcessReqBean reqBean,
			BindingResult bindingResult) {
		BaseRespBean respBean = new BaseRespBean();
		// 获取当前用户
		String userName = (String) httpSession.getAttribute(ScfConsts.SESSION_USERNAME);
		reqBean.setUserId(userName);
		respBean = iPayCommitmentService.doAgree(reqBean, httpSession);
		return respBean;
	}
	
	@RequestMapping(value = "/reApply", method = RequestMethod.POST, consumes = { "application/json" }, produces = { "application/json;charset=UTF-8" })
	public @ResponseBody BaseRespBean reApply(HttpSession httpSession,
			@RequestBody PayCommitProcessReqBean reqBean,
			BindingResult bindingResult) {
		BaseRespBean respBean = new BaseRespBean();
		// 获取当前用户
		String userName = (String) httpSession.getAttribute(ScfConsts.SESSION_USERNAME);
		reqBean.setUserId(userName);
		respBean = iPayCommitmentService.reApply(reqBean, httpSession);
		return respBean;
	}
	
	
	@RequestMapping(value = "/deleteProcess", method = RequestMethod.POST, consumes = { "application/json" }, produces = { "application/json;charset=UTF-8" })
	public @ResponseBody BaseRespBean deleteProcess(HttpSession httpSession,
			@RequestBody ActivitiDeleteProcessReqBean reqBean,
			BindingResult bindingResult) {
		BaseRespBean respBean = new BaseRespBean();
		String procInstId = reqBean.getProcInstId();
		respBean = iPayCommitmentService.deleteProcess(procInstId);
		return respBean;
	}
	
	@RequestMapping(value = "/calculationCash", method = RequestMethod.POST, consumes = { "application/json" }, produces = { "application/json;charset=UTF-8" })
	public @ResponseBody BaseRespBean calculationCash(HttpSession httpSession,
			@RequestBody PayCommitmentListReqBean reqBean,
			BindingResult bindingResult) {
		BaseRespBean respBean = new BaseRespBean();
		
		respBean = iPayCommitmentService.calPayAmt(reqBean.getFileUrl(), httpSession);
		return respBean;
	}
	@RequestMapping(value = "/compareCarStatus", method = RequestMethod.POST, consumes = { "application/json" }, produces = { "application/json;charset=UTF-8" })
	public @ResponseBody BaseRespBean compareCarStatus(HttpSession httpSession,
			@RequestBody PayCommitmentListReqBean reqBean,
			BindingResult bindingResult) {
		BaseRespBean respBean = new BaseRespBean();
		
		respBean = iPayCommitmentService.calCarCompare(reqBean.getFinanceId(),reqBean.getFileUrl(), httpSession);
		return respBean;
	}
	@RequestMapping(value = "/getRecommend", method = RequestMethod.POST, consumes = { "application/json" }, produces = { "application/json;charset=UTF-8" })
	public @ResponseBody BaseRespBean getRecommend(
			@RequestBody PayCommitProcessReqBean reqBean,
			BindingResult bindingResult) {
		BaseRespBean respBean = new BaseRespBean();
		respBean = iPayCommitmentService.getRecommend(reqBean.getCorpId(),reqBean.getYwlxId());
		return respBean;
	}
	@RequestMapping(value = "/getRecommendAdd", method = RequestMethod.POST, consumes = { "application/json" }, produces = { "application/json;charset=UTF-8" })
	public @ResponseBody BaseRespBean getRecommendAdd(
			@RequestBody PayCommitProcessReqBean reqBean,
			BindingResult bindingResult) {
		BaseRespBean respBean = new BaseRespBean();
		respBean = iPayCommitmentService.getRecommendAdd(reqBean.getCorpId(),reqBean.getYwlxId());
		return respBean;
	}
	
	@RequestMapping(value = "/downloadPdf", method = RequestMethod.POST, consumes = { "application/json" }, produces = { "application/json;charset=UTF-8" })
	public @ResponseBody BaseRespBean getDownloadPdf(HttpSession httpSession,
			@RequestBody PayCommitProcessReqBean reqBean,HttpServletRequest request,
			BindingResult bindingResult) {
		BaseRespBean respBean = new BaseRespBean();
		respBean = iPayCommitmentService.download(reqBean,httpSession);
		return respBean;
	}
	@RequestMapping(value = "/updateModel", method = RequestMethod.POST, consumes = { "application/json" }, produces = { "application/json;charset=UTF-8" })
	public @ResponseBody BaseRespBean updateFinanceModel(HttpSession httpSession,
			@Valid @RequestBody PayCommitProcessReqBean flowReqBean,
			BindingResult bindingResult) {
		BaseRespBean respBean = new BaseRespBean();
		if (bindingResult.hasErrors()) {
			
			respBean.setResult(ErrorCodeEnum.PARAM_VALID_ERROR);
			respBean.setResultErrorMap(bindingResult);
			return respBean;
		}
		
		iPayCommitmentService.updateCommitmentModel(flowReqBean, httpSession, "#0001");

		return respBean;
	}
	//2018-08-13新增的给经销商查询的页面
	@RequestMapping(value = "/listQuery", method = RequestMethod.POST, consumes = { "application/json" }, produces = { "application/json;charset=UTF-8" })
	public @ResponseBody BaseRespBean listQuery(HttpSession httpSession, @Valid @RequestBody PayCommitmentListReqBean reqBean) throws IOException {
		
		// 获取当前用户
		String corpId = (String) httpSession.getAttribute(ScfConsts.SESSION_CORP_ID);
		reqBean.setCorpId(corpId);
		
		BaseRespBean respBean = iPayCommitmentService.getPayInfoList(reqBean);
		return respBean;
	}
}
