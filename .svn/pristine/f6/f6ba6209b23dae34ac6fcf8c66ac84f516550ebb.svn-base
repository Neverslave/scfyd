package com.ut.scf.web.controller.query;

import java.io.File;
import java.util.Date;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.ut.scf.core.dict.PageInfoBean;
import com.ut.scf.core.dict.ScfConsts;
import com.ut.scf.core.util.BeanUtil;
import com.ut.scf.core.util.ScfDateUtil;
import com.ut.scf.reqbean.query.SaleInfoListReqBean;
import com.ut.scf.respbean.BaseRespBean;
import com.ut.scf.service.query.ISaleInfoQueryService;

@Controller
@RequestMapping("/saleQuery")
public class SaleInfoQueryController {

	private static final Logger log = LoggerFactory.getLogger(SaleInfoQueryController.class);

	@Resource
	private ISaleInfoQueryService saleInfoQueryService;

	@RequestMapping(value = "/list")
	@ResponseBody
	public BaseRespBean getSaleQueryList(HttpSession httpSession, @RequestBody SaleInfoListReqBean reqBean) {
		String corpId = (String) httpSession.getAttribute(ScfConsts.SESSION_CORP_ID);
		Map<String, Object> paramMap = BeanUtil.beanToMap(reqBean);
		if (!"corp00001".equals(corpId) && !"corp00002".equals(corpId) && !"corp00003".equals(corpId)) {// 经销商只能看自己
			paramMap.put("corpId", corpId);
		}
		PageInfoBean page = new PageInfoBean();
		page.setPageNumber(reqBean.getPageNumber());
		page.setPageSize(reqBean.getPageSize());
		BaseRespBean respBean = saleInfoQueryService.saleQueryList(paramMap, page);
		return respBean;
	}

	@RequestMapping(value = "/listAll")
	@ResponseBody
	public BaseRespBean getSaleAllQueryList(HttpSession httpSession, @RequestBody SaleInfoListReqBean reqBean) {
		String corpId = (String) httpSession.getAttribute(ScfConsts.SESSION_CORP_ID);
		Map<String, Object> paramMap = BeanUtil.beanToMap(reqBean);
		if (!"corp00001".equals(corpId) && !"corp00002".equals(corpId) && !"corp00003".equals(corpId)) {// 经销商只能看自己
			paramMap.put("corpId", corpId);
		}
		BaseRespBean respBean = saleInfoQueryService.saleAllQueryList(paramMap);
		return respBean;
	}

	@RequestMapping(value = "/exportExcel")
	@ResponseBody
	public String exportExcel(HttpSession httpSession, @RequestBody SaleInfoListReqBean reqBean,
			HttpServletRequest request) {
		try {
			String corpId = (String) httpSession.getAttribute(ScfConsts.SESSION_CORP_ID);
			String signPath = "/exportExcel/LX-" + ScfDateUtil.format(new Date(), "yyyyMMddhhmmss") + ".xls";
			String path = request.getSession().getServletContext().getRealPath(signPath);

			File tempFile = new File(path);
			File fileParent = tempFile.getParentFile();
			if (!fileParent.exists()) {
				fileParent.mkdirs();
			}

			Map<String, Object> paramMap = BeanUtil.beanToMap(reqBean);
			if (!"corp00001".equals(corpId) && !"corp00002".equals(corpId) && !"corp00003".equals(corpId)) {// 经销商只能看自己
				paramMap.put("corpId", corpId);
			}
			saleInfoQueryService.exportExcel(paramMap, path);
			return request.getContextPath() + signPath;
		} catch (Exception e) {
			e.printStackTrace();
			return "";
		}

	}

}
