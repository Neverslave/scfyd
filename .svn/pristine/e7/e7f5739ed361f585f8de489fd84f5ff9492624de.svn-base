package com.ut.scf.service.statistics.impl;

import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;

import com.ut.scf.core.dict.PageInfoBean;
import com.ut.scf.dao.statistics.IAmitYuQiDao;
import com.ut.scf.respbean.BaseRespBean;
import com.ut.scf.respbean.PageRespBean;
import com.ut.scf.service.statistics.IAmitYuQiService;

@Service("amitYuQiService")
public class AmitYuQiServiceImpl implements IAmitYuQiService{

	@Resource
	private IAmitYuQiDao amitYuQiDao;
	
	
	@Override
	public BaseRespBean AmitYuQiList(Map<String, Object> paramMap,PageInfoBean page) {
		
		List<Map<String, Object>> list = new ArrayList<Map<String, Object>>();
/*		Map<String, Object> hashMap=new HashMap<String, Object> ();*/
		
		list=amitYuQiDao.getYuQiList(paramMap,page);
		
		PageRespBean respBean = new PageRespBean();
		respBean.setPages(page.getTotalPage());
		respBean.setRecords(page.getTotalRecord());
		respBean.setDataList(list);
		return respBean;
	}
	
	@Override
	public BaseRespBean AmitYuQiHistoryList(Map<String, Object> paramMap,PageInfoBean page) {
		
		List<Map<String, Object>> list = new ArrayList<Map<String, Object>>();
/*		Map<String, Object> hashMap=new HashMap<String, Object> ();*/
		
		list=amitYuQiDao.getYuQiHistoryList(paramMap,page);
		
		PageRespBean respBean = new PageRespBean();
		respBean.setPages(page.getTotalPage());
		respBean.setRecords(page.getTotalRecord());
		respBean.setDataList(list);
		return respBean;
	}
	
	@Override
	public BaseRespBean YuQiRepaySum(Map<String, Object> paramMap,PageInfoBean page) {
		
		List<Map<String, Object>> list = new ArrayList<Map<String, Object>>();
/*		Map<String, Object> hashMap=new HashMap<String, Object> ();*/
		
		list=amitYuQiDao.getYuQiRepaySum(paramMap,page);
		
		PageRespBean respBean = new PageRespBean();
		respBean.setPages(page.getTotalPage());
		respBean.setRecords(page.getTotalRecord());
		respBean.setDataList(list);
		return respBean;
	}
	
	public static BigDecimal getBigDecimal(Object value) {
        BigDecimal ret = null;
        if (value != null) {
            if (value instanceof BigDecimal) {
                ret = (BigDecimal) value;
            } else if (value instanceof String) {
                ret = new BigDecimal((String) value);
            } else if (value instanceof BigInteger) {
                ret = new BigDecimal((BigInteger) value);
            } else if (value instanceof Number) {
                ret = new BigDecimal(((Number) value).doubleValue());
            } else {
                throw new ClassCastException("Not possible to coerce [" + value + "] from class " + value.getClass() + " into a BigDecimal.");
            }
        }
        return ret;
    }
}
