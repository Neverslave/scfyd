<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ut.scf.dao.query.IOrderAssetsDao" >
<!-- 当期有效订单,当期有效金额 -->

<!-- <select id="createSpOrderInfoFunction"  resultType="hashmap" parameterType="hashmap" >
			delimiter ||
CREATE PROCEDURE sp_order_info (
	IN p_state VARCHAR (2),
	IN p_people_type VARCHAR (2),
	IN p_order_begin VARCHAR (10),
	IN p_order_date VARCHAR (10),
IN p_order_date_end VARCHAR (10)
)
BEGIN
	DROP TABLE
IF EXISTS trun_order_info ; CREATE TABLE trun_order_info (
	rowid BIGINT auto_increment PRIMARY KEY,
	order_id VARCHAR (30)
) ; INSERT INTO trun_order_info (order_id) SELECT DISTINCT
	order_id
FROM
	order_info a USE INDEX (
		index_order_id_yi_state_people_type
	)
LEFT JOIN order_info_yi b ON a.order_id_yi = b.order_id_yi
WHERE
	a.state <> p_state
AND a.people_type = p_people_type
AND b.order_date >= p_order_begin
AND b.order_date <= p_order_date ; SELECT
	trun.order_id AS orderId,
		orderyi.order_date AS orderDate,
			'' AS orderCity,
			orderyi.order_id_yi AS orderIdYi,
			orderyi.yi_user_id AS userIdYi,
			'' AS superUserIdYi,
			orderyi.package_id AS setMealId,
			orderyi.package_name AS setMealName,
			orderyi.package_price AS setMealPrice,
			orderyi.goods_name AS goodsName,
			orderyi.goods_type AS goodsType,
			orderyi.goods_price AS goodsPrice,
			orderyi.goods_num AS goodsNum,
			orderyi.goods_describe AS goodsDescribe,
			orderyi.order_price AS orderPrice,
			orderyi.order_describe AS orderDescribe,
			orderyi.finance_period AS financePeriod,
			orderyi.finance_amt AS financePrice,
			orderyi.mobile_num AS tellNum,
			orderyi.imei AS IMEI,
			orderyi.operator AS operator,
			orderyi.mobile_maker AS mobileMaker,
			orderyi.mobile_type AS mobileType,
			orderyi.operating_system AS operatingSystem,
			orderyi.browser_type AS browserType,
			orderyi.browser_version AS browserVersion,
			orderyi.safe_mark AS safeMark,
			orderyi.network_type AS networkType,
			orderyi.intranet_ip AS intranetIp,
			orderyi.salesperson_mobile_longitude AS salespersonMobileLongitude,
			orderyi.salesperson_mobile_latitude AS salespersonMobileLatitude,
			orderyi.customer_manager AS customerManager,
			orderyi.customer_tell AS customerTell,
			orderyi.business_all_name AS businessAllName,
			orderyi.business_all_address AS businessAllAddress,
			orderyi.bill_photos AS billPhotos,
			orderyi.agreement_pdf AS agreementPdf,
			orderyi.moblie_imei AS moblieImei,
			orderyi.order_status AS orderStatus,
			'' AS telecommunicationAgent,
			'' AS telecommunicationPlace,
			'' AS dateOfLoan,
			'' AS rate,
			stu.`name` as personName,
			stu.id_card as personId,
			stu.age as personAge,
			'' as personEducation,
			'' as personOccupation,
			'' as personCity,
			'' as creditScore,
		
			IFNULL(yszk.sumRepaymentMoney ,0.00) AS sumRepaymentMoney,
			IFNULL(yszk.sum_current_money,0.00) AS sumCurrentMoney,
			IFNULL(yszk.sum_marketing_fee_yi,0.00) AS sumMarketingFeeYi,
			IFNULL(yszk.sum_service_charge_yi,0.00) AS sumServiceChargeYi,
			IFNULL(yszk.sumRepaymentMoney  - yszk.sum_current_money,0.00) AS sumInterestMarkte,
			IFNULL(khych.sumPaidPrice ,0.00)AS sumPaidPrice,
			IFNULL(khych.sumPaidCommission,0.00) AS sumPaidCommission,
			IFNULL(yszk.sum_current_money - IFNULL(khych.sumPaidPrice,0.00) ,0.00)AS sumNotPaidCurrentMoney,
			IFNULL((
				CASE
				WHEN ISNULL(earlyrepay.order_id) THEN
					yszk.sumRepaymentMoney - yszk.sum_service_charge_yi - yszk.sum_current_money - (
						IFNULL(khych.sumPaidCommission,0.00) - yszk.sum_service_charge_yi / 24 * IFNULL(khych.sumCount,0) 
					)
				ELSE
					earlyrepay.sumCommission - earlyrepay.sumpaid_commission
				END
			),0.00) AS sumNotPaidInterestMoney,
			IFNULL(mqhk.repayment_price + mqhk.commission,0.00) AS periodPaidprice,
			'10号' AS paidDateEach,
			mqhk.repayment_date AS paidDateFinal,
			IFNULL(yuqi.sumdays,0) AS yuqiDays,
			IFNULL(yuqi.sumcout,0) AS yuqiTimes,
		IFNULL((
				CASE
				WHEN ISNULL(yihuan.order_id)
				AND ISNULL(earlyrepay.order_id) THEN
					0
				ELSE
					yihuan.repayCount
				END
			) ,0)	
		AS havPeriod,
			(
				CASE
				WHEN earlyrepay.order_id is NOT NULL  THEN
					0
				WHEN ISNULL(earlyrepay.order_id)
				AND ISNULL(yszk.order_id) THEN
					24
				ELSE
					24 - IFNULL(yihuan.repayCount,0)
				END
			) AS notPeriod,
		earlyrepay.order_id as earlyClearance

FROM
	trun_order_info trun

LEFT JOIN (
	SELECT
		a.order_id,
		SUM(repayment_money) AS sumRepaymentMoney,
		SUM(current_money) AS sum_current_money,
		SUM(interest) AS sum_interest,
		SUM(service_charge_yi) AS sum_service_charge_yi,
		SUM(marketing_fee_yi) AS sum_marketing_fee_yi
	FROM
		trun_order_info a
	LEFT JOIN repayment_plan_info b ON a.order_id = b.order_id
	GROUP BY
		a.order_id
) yszk ON trun.order_id = yszk.order_id
LEFT JOIN (
	SELECT
		aa.order_id,
		SUM(paid_price) sumPaidPrice,
		SUM(paid_commission) sumPaidCommission,
		COUNT(*) sumCount
	FROM
		trun_order_info aa
	LEFT JOIN repayment_plan_user_info bb ON aa.order_id = bb.order_id
	WHERE
		DATE_FORMAT(paid_date, '%y%m%d') < DATE_FORMAT(p_order_date_end, '%y%m%d')
	GROUP BY
		aa.order_id
) khych ON trun.order_id = khych.order_id 
LEFT JOIN (
	SELECT
		order_id,
		COUNT(*) AS repayCount,
		SUM(commission) AS sumCommission,
		SUM(paid_commission) AS sumpaid_commission
	FROM
		repayment_plan_user_info
	WHERE
		order_id IN (
			SELECT
				a.order_id
			FROM
				trun_order_info a
			WHERE
				EXISTS (
					SELECT
						1
					FROM
						repayment_plan_user_info b
					WHERE
						a.order_id = b.order_id
					AND (
						loan_tenor = '99'
						OR loan_tenor = '88'
					)
					AND people_id = '3'
					AND DATE_FORMAT(repayment_date, '%y%m%d') < DATE_FORMAT(p_order_date_end, '%y%m%d')
				)
		)
	AND DATE_FORMAT(paid_date, '%y%m%d') < DATE_FORMAT(p_order_date_end, '%y%m%d')
	AND paid_date IS NOT NULL
	GROUP BY
		order_id
) earlyrepay ON trun.order_id = earlyrepay.order_id
LEFT JOIN (
	SELECT
		order_id,
		repayment_price,
		commission,
		repayment_date
	FROM
		repayment_plan_user_info
	WHERE
		loan_tenor = '24'
) mqhk ON trun.order_id = mqhk.order_id
LEFT JOIN (
	SELECT
		order_id,
		SUM(dayscount) AS sumdays,
		COUNT(*) AS sumcout
	FROM
		(
			SELECT
				order_id,
				loan_tenor,
				TIMESTAMPDIFF(
					DAY,
					repayment_date,
					IFNULL(paid_date, p_order_date_end)
				) AS dayscount
			FROM
				repayment_plan_user_info
			WHERE
				people_id = '3'
			AND DATE_FORMAT(repayment_date, '%y%m%d') < DATE_FORMAT(p_order_date_end, '%y%m%d')
			AND (
				DATE_FORMAT(paid_date, '%y%m%d') > DATE_FORMAT(repayment_date, '%y%m%d')
				OR paid_date IS NULL
			)
		) tempee
	GROUP BY
		order_id
) yuqi ON trun.order_id = yuqi.order_id
LEFT JOIN (
	SELECT
		order_id,
		COUNT(*) repayCount
	FROM
		repayment_plan_user_info
	WHERE
		state = '1'
	AND people_id = '3'
	AND DATE_FORMAT(paid_date, '%y%m%d') < DATE_FORMAT(p_order_date_end, '%y%m%d')
	GROUP BY
		order_id
) yihuan ON trun.order_id = yihuan.order_id
LEFT JOIN order_info orderl USE INDEX (index_order_id_order_id_yi) ON trun.order_id = orderl.order_id

LEFT JOIN order_info_yi orderyi USE INDEX (index_order_id_yi) ON orderl.order_id_yi = orderyi.order_id_yi
LEFT JOIN stu_info stu ON orderl.stu_id = stu.stu_id;
END||
delimiter ;


CALL sp_order_info ('0', '3', '20180701','20180801','20180811');


</select> -->
  
<select id="spOrderInfoList"  resultType="hashmap" parameterType="hashmap"  statementType="CALLABLE">
		CALL sp_order_info (#{p_state,jdbcType=VARCHAR,mode=IN}, #{p_people_type,jdbcType=VARCHAR,mode=IN}, #{p_order_begin,jdbcType=VARCHAR,mode=IN}, #{p_order_date,jdbcType=VARCHAR,mode=IN}, #{p_order_date_end,jdbcType=VARCHAR,mode=IN});
	</select>
	
	
  <select  id="getFqcrOrderComputeHistoryList" resultType="hashmap" parameterType="hashmap" >

	select
		p_state,
		p_people_type,
		p_order_begin,
		p_order_date,
		p_order_date_end ,
		file_path

	
	from
		order_assets_info
		where 1=1
	
		order by p_order_date desc
  </select>
</mapper>